{"version":3,"sources":["components/PageNavLink.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PeopleInfo.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","useState","people","setPeople","errorMsg","setErrorMsg","isError","setIsError","isLoading","setIsLoading","slug","useParams","useEffect","apiPeople","length","catch","finally","visiblePeople","map","persone","mother","find","parent","name","motherName","father","fatherName","person","sex","born","died","PeopleInfo","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cd116f9d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport interface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\n\nexport const PeopleTable: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then((apiPeople) => {\n        setPeople(apiPeople);\n        if (people.length === 0) {\n          setErrorMsg('There are no people on the server');\n        }\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visiblePeople = people.map(persone => {\n    return {\n      ...persone,\n      mother: people.find(parent => parent.name === persone.motherName),\n      father: people.find(parent => parent.name === persone.fatherName),\n    };\n  });\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {visiblePeople.length > 0\n          ? (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visiblePeople.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames(\n                      { 'has-background-warning': person.slug === slug },\n                    )}\n                  >\n                    <td>\n                      <Link\n                        to={`../${person.slug}`}\n                        className={classNames(\n                          { 'has-text-danger': person.sex === 'f' },\n                        )}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? (\n                          <Link\n                            to={`../${person.mother.slug}`}\n                            className=\"has-text-danger\"\n                          >\n                            {person.mother.name}\n                          </Link>\n                        )\n                        : person.motherName\n                          || '-'}\n                    </td>\n                    <td>\n                      {person.father\n                        ? (\n                          <Link to={`../${person.father.slug}`}>\n                            {person.father.name}\n                          </Link>\n                        )\n                        : person.fatherName\n                          || '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )\n          : (\n            <p data-cy=\"noPeopleMessage\">\n              {errorMsg}\n            </p>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeopleInfo: FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable />\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PageNavLink } from './components/PageNavLink';\nimport { PeopleInfo } from './components/PeopleInfo';\n\nexport const App = () => (\n\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeopleInfo />} />\n            <Route path=\":slug\" element={<PeopleInfo />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}